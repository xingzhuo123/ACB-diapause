devtools::install_github("junjunlab/ClusterGVis",force = TRUE)
devtools::install_github("junjunlab/jjAnno")

remove.packages('ClusterGVis')

library(ClusterGVis)
library(org.Mm.eg.db)
setwd("M:\\滞育数据分析\\玉米螟转录翻译组分析")


+data<- read.csv("RPF_count_all.csv",row.names =1 )
data<- read.csv("cpm_RPF_count2.csv" ,row.names =1)

dat2 = log2(edgeR::cpm(data)+1)
dat2<- as.data.frame(data)

write.csv(dat2,"cpm_RPF_count.csv")

# load data
data(exps)

getClusters(exp = dat2)

ggsave("cluster.pdf",width = 4,height = 3)
ggsave("cluster.pdf",width = 4,height = 3)

# using mfuzz for clustering
# mfuzz


data("exps")
# mfuzz
cm <- clusterData(exp = dat2,
                  cluster.method = "mfuzz",
                  cluster.num = 8)

cm <- clusterData(exp = dat2,
                  cluster.method = "mfuzz",
                  cluster.num = 10)


cm <- clusterData(exp = dat2,
                  cluster.method = "kmeans",
                  cluster.num = 8)


?clusterData
ghh=cm$long.res


# 提取cluster列为1的行，并获取对应的gene列
cg1 <- unique(ghh$gene[ghh$cluster == 1])
ck1 <- sub("LOC", "", cg1)
cg2 <- unique(ghh$gene[ghh$cluster == 2])
ck2 <- sub("LOC", "", cg2)
cg3 <- unique(ghh$gene[ghh$cluster == 3])
ck3 <- sub("LOC", "", cg3)
cg4 <- unique(ghh$gene[ghh$cluster == 4])
ck4 <- sub("LOC", "", cg4)
cg5 <- unique(ghh$gene[ghh$cluster == 5])
ck5 <- sub("LOC", "", cg5)
cg6 <- unique(ghh$gene[ghh$cluster == 6])
ck6 <- sub("LOC", "", cg6)
cg7 <- unique(ghh$gene[ghh$cluster == 6])
ck7 <- sub("LOC", "", cg7)
cg8 <- unique(ghh$gene[ghh$cluster == 6])
ck8 <- sub("LOC", "", cg8)
cg9 <- unique(ghh$gene[ghh$cluster == 6])
ck9 <- sub("LOC", "", cg9)
cg10 <- unique(ghh$gene[ghh$cluster == 6])
ck10<- sub("LOC", "", cg10)




#GO富集分析
ego1 <- enrichGO(
  gene=cg1,
  OrgDb="org.Ofurnacalis.eg.db",
  keyType = "GID",
  ont = "ALL",
  pvalueCutoff = 0.05,
  pAdjustMethod = "BH",
  qvalueCutoff = 0.05)



ego_list <- list()

# 循环处理cg1到cg6
for (i in 1:8) {
  # 构建当前循环的cg变量名，例如，cg1、cg2、cg3等
  cg <- get(paste0("cg", i))
  
  # 执行富集分析
  ego <- enrichGO(
    gene = cg,
    OrgDb = "org.Ofurnacalis.eg.db",
    keyType = "GID",
    ont = "ALL",
    pvalueCutoff = 0.05,
    pAdjustMethod = "BH",
    qvalueCutoff = 0.05
  )
  
  # 将富集分析结果添加到列表中
  ego_list[[paste0("ego", i)]] <- ego
}


ego2=unique(ego_list$ego2[])









kk2 <- enrichKEGG(kRNA$kegg,
                  organism = "dme",
                  pAdjustMethod = "BH",
                  pvalueCutoff =1,
                  qvalueCutoff =1)
write.csv(kk2,"KEGG enrichment——RNA.csv")
kk3 = setReadable(kk2,
                  OrgDb = "org.Dm.eg.db",
                  keyType = "FLYBASECG",setReadable=T)
















# enrich for clusters
enrich <- enrichCluster(object = cm,
                        topn = 5,
                        seed = 5201314,
                        id.trans=F,
                        OrgDb="org.Ofurnacalis.eg.db",
                        type="BP",
                        pvalueCutoff=1,
                        toType = 'GID',
                        readable = FALSE )
?enrichCluster
column_order=c('without_dia_1',
               'without_dia_2',
               'without_dia_3',	
               'Pre_dia_1',
               'Pre_dia_2',
               'Pre_dia_3',
               'dia_1',
               'dia_2',
               'dia_3')
wts=order(column_order)
# add gene name
markGenes = rownames(dat2)[sample(1:nrow(dat2),30,replace = F)]
pdf('htcol_RNAseq9.pdf',height = 10,width = 6,onefile = F)
visCluster(object = cm,
           plot.type = "both",
           column_names_rot = 45,
           markGenes = markGenes,
           show_row_dend = T,
           sample.order = rev(colnames(dat2)),
           mulGroup = c(3,3,3),
         #  ht.col = c("#4DBBD5","#FFFFFF","#E64B35")
           )
dev.off()
?visCluster
pdf('RAN22266689.pdf',height = 10,width = 8,onefile = F)
visCluster(object = cm,
           plot.type = "both",
           cluster_columns=T,
           column_names_rot = 45,
          #column.split=T,
           show_row_dend = F,
           ncol=4,
           border=T,
          # markGenes = markGenes,
           markGenes.side = "left",
           annoTerm.data = enrich,
           line.side = "left",
           #  sample.group= ,
           #sample.order=T ,
        #   add.line=T,
          # add.box=T,
         #  add.bar=T,
           # set.md="median",
           # go.col = rep(jjAnno::useMyCol("stallion",n =4),each = 6),
           go.size = "pval",
           sample.group = rep(c("No-diapause","Pre-diapause","Diapause"),each = 3),
           # mulGroup = c(3,3,3),
          ht.col.list = (col_range = c(-2, 0, 2),
                         col_color = c("#08519C", "white", "#A50F15")),
           mline.col = c(ggsci::pal_lancet()(3)))
dev.off()
c('#0099CC','#CC3333'))


pdf('RAN2226668.pdf',height = 10,width = 9.5,onefile = F)
visCluster(object = cm,
           annoTerm.data = enrich,
           column_names_rot = 45,
           ctAnno.col = ggsci::pal_npg()(10),
           add.box = T,
           plot.type = "both",
         #  ht.col.list =  c("#4DBBD5","#FFFFFF","#E64B35")
       #  ht.col.list= ggsci::pal_npg()(2)
         )



library(RNAseqStat2)
library(airway)
library(org.Dm.eg.db)
library(BiocGenerics)
library(stats)
library(DESeq2)
library(rlang)
library(clusterProfiler)
library(org.Ofurnacalis.eg.db)
library(magrittr)
library(clusterProfiler)
library(stringr)
library(dplyr)
library(ggplot2)
library(enrichplot)
library(GOSemSim)
 

?GO_similarity
## load data
keytypes(org.Ofurnacalis.eg.db)
updateR()
sessionInfo ()

library(AnnotationHub) 
hub <- AnnotationHub::AnnotationHub()
query(hub,"Ostrinia")

Ost.OrgDb<- hub[["AH102034"]]
search_kegg_organism('Ostrinia', by='scientific_name')
keytypes(Ost.OrgDb)
sss<- bitr(keys(org.Ofurnacalis.eg.db)[200], 'GID', 
           c("EVIDENCE","GENENAME","GO","GID","GOALL",
             "ONTOLOGY","ONTOLOGYALL" ), org.Ofurnacalis.eg.db)
assa<- bitr(sss$GID,fromType = "GID",toType = c("GID","GENENAME"),OrgDb=org.Ofurnacalis.eg.db)



data<- read.csv("RPF_count_NoVSpre.csv",row.names =1 )
setwd("G:\\赵师兄\\玉米螟数据分析\\滞育RNAseq\\滞育RIBOseq\\RIBOqc\\TE_related\\RPF DEG")

data2<- read.csv("RNA_count_gene.csv",row.names =1 )
group2<- read.csv("sample_all.csv",row.names =1  )



#data2<- read.csv("RNA-seq.csv",row.names =1 )
#data3<- read.csv("Count.csv",row.names =1 )

group<- read.csv("group_No_VS_pre2.csv",row.names =1 )
group<- read.csv("group_No_VS_pre1.csv",row.names =1  )

row_counts <- as.data.frame(data)

group_list <- as.character(group$Treat)

row_counts2 <- as.data.frame(data2)
group_list2 <- as.character(group2$treat)



palette = RColorBrewer::brewer.pal(3, "Set2")[1:3]
library(RColorBrewer)
library(ggsci)


colors = RColorBrewer::brewer.pal(breaks = c(-1.5, 0, 1.5),
                                  colors = brewer.pal(3, "Dark2"))
data_i3 <- Create_DEGContainer(species = "OF",
                               dataType = "Counts",
                               idType = "SYMBOL",
                               OrgDb = "org.Ofurnacalis.eg.db",
                               organism = "ACB",
                               expMatrix = row_counts,
                               groupInfo = group_list,
                               caseGroup = "pre_dia")


data_o <- runALL(object = data_i3,dir = "Riboseq_all_qc")

#############分步质控#########
library(ggtheme)
install.packages("ggthemes")
install.packages("factoextra")
library("ggthemes")
library("factoextra")
factoextra
###########RPF
palette = RColorBrewer::brewer.pal(3, "Set2")[1:3]
dat = log2(edgeR::cpm(row_counts2)+1)

dat<- as.data.frame(dat)
write.csv(dat,'RNASeq_tpm.csv')
dat2 = log2(edgeR::cpm(row_counts)+1)
dat2<- as.data.frame(dat2)
write.csv(dat,'RIBOSeq_tpm.csv')
# load data
data(exps)

# using mfuzz for clustering
# mfuzz
cm <- clusterData(exp = dat2,
                  cluster.method = "mfuzz",
                  cluster.num = 4)

# enrich for clusters
enrich <- enrichCluster(object = cm,
                        OrgDb = "org.Ofurnacalis.eg.db",
                        type = "BP",
                        pvalueCutoff = 0.05,
                        topn = 5,
                        seed = 5201314)

# add gene name
markGenes = rownames(dat2)[sample(1:nrow(dat2),30,replace = F)]
pdf('htcol.pdf',height = 10,width = 6,onefile = F)
visCluster(object = cm,
           plot.type = "heatmap",
           column_names_rot = 45,
           #  markGenes = markGenes,
           show_row_dend = F,
           #  ht.col = c("green","black","red")
)
dev.off()

pdf('combRNA.pdf',height = 10,width = 12,onefile = F)
visCluster(object = cm,
           plot.type = "both",
           column_names_rot = 45,
           show_row_dend = F,
           markGenes = markGenes,
           markGenes.side = "left",
           annoTerm.data = enrich,
           line.side = "left",
           go.col = rep(jjAnno::useMyCol("stallion",n = 8),each =3),
           go.size = "pval",
          # sample.group = rep(c("sample1","sample2","sample3"),each = 2),
           mulGroup = c(2,2,2),
           ht.col = c("#4DBBD5","#FFFFFF","#E64B35")
          )
dev.off()

